{"version":3,"sources":["meteor://ðŸ’»app/imports/api/lists/server/publications.js","meteor://ðŸ’»app/imports/api/lists/lists.js","meteor://ðŸ’»app/imports/api/lists/methods.js","meteor://ðŸ’»app/imports/api/todos/server/publications.js","meteor://ðŸ’»app/imports/api/todos/incompleteCountDenormalizer.js","meteor://ðŸ’»app/imports/api/todos/methods.js","meteor://ðŸ’»app/imports/api/todos/todos.js","meteor://ðŸ’»app/imports/startup/both/index.js","meteor://ðŸ’»app/imports/startup/both/useraccounts-configuration.js","meteor://ðŸ’»app/imports/startup/server/fixtures.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/register-api.js","meteor://ðŸ’»app/imports/startup/server/reset-password-email.js","meteor://ðŸ’»app/imports/startup/server/security.js","meteor://ðŸ’»app/i18n/en.i18n.json","meteor://ðŸ’»app/i18n/fr.i18n.json","meteor://ðŸ’»app/server/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["/* eslint-disable prefer-arrow-callback */\r\n\r\nimport { Meteor } from 'meteor/meteor';\r\n\r\nimport { Lists } from '../lists.js';\r\n\r\nMeteor.publish('lists.public', function listsPublic() {\r\n  return Lists.find({\r\n    userId: { $exists: false },\r\n  }, {\r\n    fields: Lists.publicFields,\r\n  });\r\n});\r\n\r\nMeteor.publish('lists.private', function listsPrivate() {\r\n  if (!this.userId) {\r\n    return this.ready();\r\n  }\r\n\r\n  return Lists.find({\r\n    userId: this.userId,\r\n  }, {\r\n    fields: Lists.publicFields,\r\n  });\r\n});\r\n","import { Mongo } from 'meteor/mongo';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { Factory } from 'meteor/factory';\r\nimport { TAPi18n } from 'meteor/tap:i18n';\r\n\r\nimport { Todos } from '../todos/todos.js';\r\n\r\nclass ListsCollection extends Mongo.Collection {\r\n  insert(list, callback, language = 'en') {\r\n    const ourList = list;\r\n    if (!ourList.name) {\r\n      const defaultName = TAPi18n.__('lists.insert.list', null, language);\r\n      let nextLetter = 'A';\r\n      ourList.name = `${defaultName} ${nextLetter}`;\r\n\r\n      while (this.findOne({ name: ourList.name })) {\r\n        // not going to be too smart here, can go past Z\r\n        nextLetter = String.fromCharCode(nextLetter.charCodeAt(0) + 1);\r\n        ourList.name = `${defaultName} ${nextLetter}`;\r\n      }\r\n    }\r\n\r\n    return super.insert(ourList, callback);\r\n  }\r\n  remove(selector, callback) {\r\n    Todos.remove({ listId: selector });\r\n    return super.remove(selector, callback);\r\n  }\r\n}\r\n\r\nexport const Lists = new ListsCollection('Lists');\r\n\r\n// Deny all client-side updates since we will be using methods to manage this collection\r\nLists.deny({\r\n  insert() { return true; },\r\n  update() { return true; },\r\n  remove() { return true; },\r\n});\r\n\r\nLists.schema = new SimpleSchema({\r\n  _id: { type: String, regEx: SimpleSchema.RegEx.Id },\r\n  name: { type: String },\r\n  incompleteCount: { type: Number, defaultValue: 0 },\r\n  userId: { type: String, regEx: SimpleSchema.RegEx.Id, optional: true },\r\n});\r\n\r\nLists.attachSchema(Lists.schema);\r\n\r\n// This represents the keys from Lists objects that should be published\r\n// to the client. If we add secret properties to List objects, don't list\r\n// them here to keep them private to the server.\r\nLists.publicFields = {\r\n  name: 1,\r\n  incompleteCount: 1,\r\n  userId: 1,\r\n};\r\n\r\nFactory.define('list', Lists, {});\r\n\r\nLists.helpers({\r\n  // A list is considered to be private if it has a userId set\r\n  isPrivate() {\r\n    return !!this.userId;\r\n  },\r\n  isLastPublicList() {\r\n    const publicListCount = Lists.find({ userId: { $exists: false } }).count();\r\n    return !this.isPrivate() && publicListCount === 1;\r\n  },\r\n  editableBy(userId) {\r\n    if (!this.userId) {\r\n      return true;\r\n    }\r\n\r\n    return this.userId === userId;\r\n  },\r\n  todos() {\r\n    return Todos.find({ listId: this._id }, { sort: { createdAt: -1 } });\r\n  },\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\r\nimport { _ } from 'meteor/underscore';\r\n\r\nimport { Lists } from './lists.js';\r\n\r\nconst LIST_ID_ONLY = new SimpleSchema({\r\n  listId: Lists.simpleSchema().schema('_id'),\r\n}).validator({ clean: true, filter: false });\r\n\r\nexport const insert = new ValidatedMethod({\r\n  name: 'lists.insert',\r\n  validate: new SimpleSchema({\r\n    language: {\r\n      type: String,\r\n    },\r\n  }).validator(),\r\n  run({ language }) {\r\n    return Lists.insert({}, null, language);\r\n  },\r\n});\r\n\r\nexport const makePrivate = new ValidatedMethod({\r\n  name: 'lists.makePrivate',\r\n  validate: LIST_ID_ONLY,\r\n  run({ listId }) {\r\n    if (!this.userId) {\r\n      throw new Meteor.Error('lists.makePrivate.notLoggedIn',\r\n        'Must be logged in to make private lists.');\r\n    }\r\n\r\n    const list = Lists.findOne(listId);\r\n\r\n    if (list.isLastPublicList()) {\r\n      throw new Meteor.Error('lists.makePrivate.lastPublicList',\r\n        'Cannot make the last public list private.');\r\n    }\r\n\r\n    Lists.update(listId, {\r\n      $set: { userId: this.userId },\r\n    });\r\n  },\r\n});\r\n\r\nexport const makePublic = new ValidatedMethod({\r\n  name: 'lists.makePublic',\r\n  validate: LIST_ID_ONLY,\r\n  run({ listId }) {\r\n    if (!this.userId) {\r\n      throw new Meteor.Error('lists.makePublic.notLoggedIn',\r\n        'Must be logged in.');\r\n    }\r\n\r\n    const list = Lists.findOne(listId);\r\n\r\n    if (!list.editableBy(this.userId)) {\r\n      throw new Meteor.Error('lists.makePublic.accessDenied',\r\n        'You don\\'t have permission to edit this list.');\r\n    }\r\n\r\n    // XXX the security check above is not atomic, so in theory a race condition could\r\n    // result in exposing private data\r\n    Lists.update(listId, {\r\n      $unset: { userId: true },\r\n    });\r\n  },\r\n});\r\n\r\nexport const updateName = new ValidatedMethod({\r\n  name: 'lists.updateName',\r\n  validate: new SimpleSchema({\r\n    listId: Lists.simpleSchema().schema('_id'),\r\n    newName: Lists.simpleSchema().schema('name'),\r\n  }).validator({ clean: true, filter: false }),\r\n  run({ listId, newName }) {\r\n    const list = Lists.findOne(listId);\r\n\r\n    if (!list.editableBy(this.userId)) {\r\n      throw new Meteor.Error('lists.updateName.accessDenied',\r\n        'You don\\'t have permission to edit this list.');\r\n    }\r\n\r\n    // XXX the security check above is not atomic, so in theory a race condition could\r\n    // result in exposing private data\r\n\r\n    Lists.update(listId, {\r\n      $set: { name: newName },\r\n    });\r\n  },\r\n});\r\n\r\nexport const remove = new ValidatedMethod({\r\n  name: 'lists.remove',\r\n  validate: LIST_ID_ONLY,\r\n  run({ listId }) {\r\n    const list = Lists.findOne(listId);\r\n\r\n    if (!list.editableBy(this.userId)) {\r\n      throw new Meteor.Error('lists.remove.accessDenied',\r\n        'You don\\'t have permission to remove this list.');\r\n    }\r\n\r\n    // XXX the security check above is not atomic, so in theory a race condition could\r\n    // result in exposing private data\r\n\r\n    if (list.isLastPublicList()) {\r\n      throw new Meteor.Error('lists.remove.lastPublicList',\r\n        'Cannot delete the last public list.');\r\n    }\r\n\r\n    Lists.remove(listId);\r\n  },\r\n});\r\n\r\n// Get list of all method names on Lists\r\nconst LISTS_METHODS = _.pluck([\r\n  insert,\r\n  makePublic,\r\n  makePrivate,\r\n  updateName,\r\n  remove,\r\n], 'name');\r\n\r\nif (Meteor.isServer) {\r\n  // Only allow 5 list operations per connection per second\r\n  DDPRateLimiter.addRule({\r\n    name(name) {\r\n      return _.contains(LISTS_METHODS, name);\r\n    },\r\n\r\n    // Rate limit per connection ID\r\n    connectionId() { return true; },\r\n  }, 5, 1000);\r\n}\r\n","/* eslint-disable prefer-arrow-callback */\r\n\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\n\r\nimport { Todos } from '../todos.js';\r\nimport { Lists } from '../../lists/lists.js';\r\n\r\nMeteor.publishComposite('todos.inList', function todosInList(params) {\r\n  new SimpleSchema({\r\n    listId: { type: String },\r\n  }).validate(params);\r\n\r\n  const { listId } = params;\r\n  const userId = this.userId;\r\n\r\n  return {\r\n    find() {\r\n      const query = {\r\n        _id: listId,\r\n        $or: [{ userId: { $exists: false } }, { userId }],\r\n      };\r\n\r\n      // We only need the _id field in this query, since it's only\r\n      // used to drive the child queries to get the todos\r\n      const options = {\r\n        fields: { _id: 1 },\r\n      };\r\n\r\n      return Lists.find(query, options);\r\n    },\r\n\r\n    children: [{\r\n      find(list) {\r\n        return Todos.find({ listId: list._id }, { fields: Todos.publicFields });\r\n      },\r\n    }],\r\n  };\r\n});\r\n","import { _ } from 'meteor/underscore';\r\nimport { check } from 'meteor/check';\r\n\r\nimport { Todos } from './todos.js';\r\nimport { Lists } from '../lists/lists.js';\r\n\r\nconst incompleteCountDenormalizer = {\r\n  _updateList(listId) {\r\n    // Recalculate the correct incomplete count direct from MongoDB\r\n    const incompleteCount = Todos.find({\r\n      listId,\r\n      checked: false,\r\n    }).count();\r\n\r\n    Lists.update(listId, { $set: { incompleteCount } });\r\n  },\r\n  afterInsertTodo(todo) {\r\n    this._updateList(todo.listId);\r\n  },\r\n  afterUpdateTodo(selector, modifier) {\r\n    // We only support very limited operations on todos\r\n    check(modifier, { $set: Object });\r\n\r\n    // We can only deal with $set modifiers, but that's all we do in this app\r\n    if (_.has(modifier.$set, 'checked')) {\r\n      Todos.find(selector, { fields: { listId: 1 } }).forEach((todo) => {\r\n        this._updateList(todo.listId);\r\n      });\r\n    }\r\n  },\r\n  // Here we need to take the list of todos being removed, selected *before* the update\r\n  // because otherwise we can't figure out the relevant list id(s) (if the todo has been deleted)\r\n  afterRemoveTodos(todos) {\r\n    todos.forEach(todo => this._updateList(todo.listId));\r\n  },\r\n};\r\n\r\nexport default incompleteCountDenormalizer;\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { _ } from 'meteor/underscore';\r\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\r\n\r\nimport { Todos } from './todos.js';\r\nimport { Lists } from '../lists/lists.js';\r\n\r\nexport const insert = new ValidatedMethod({\r\n  name: 'todos.insert',\r\n  validate: Todos.simpleSchema().pick(['listId', 'text']).validator({ clean: true, filter: false }),\r\n  run({ listId, text }) {\r\n    const list = Lists.findOne(listId);\r\n\r\n    if (list.isPrivate() && list.userId !== this.userId) {\r\n      throw new Meteor.Error('todos.insert.accessDenied',\r\n        'Cannot add todos to a private list that is not yours');\r\n    }\r\n\r\n    const todo = {\r\n      listId,\r\n      text,\r\n      checked: false,\r\n      createdAt: new Date(),\r\n    };\r\n\r\n    Todos.insert(todo);\r\n  },\r\n});\r\n\r\nexport const setCheckedStatus = new ValidatedMethod({\r\n  name: 'todos.makeChecked',\r\n  validate: new SimpleSchema({\r\n    todoId: Todos.simpleSchema().schema('_id'),\r\n    newCheckedStatus: Todos.simpleSchema().schema('checked'),\r\n  }).validator({ clean: true, filter: false }),\r\n  run({ todoId, newCheckedStatus }) {\r\n    const todo = Todos.findOne(todoId);\r\n\r\n    if (todo.checked === newCheckedStatus) {\r\n      // The status is already what we want, let's not do any extra work\r\n      return;\r\n    }\r\n\r\n    if (!todo.editableBy(this.userId)) {\r\n      throw new Meteor.Error('todos.setCheckedStatus.accessDenied',\r\n        'Cannot edit checked status in a private list that is not yours');\r\n    }\r\n\r\n    Todos.update(todoId, { $set: {\r\n      checked: newCheckedStatus,\r\n    } });\r\n  },\r\n});\r\n\r\nexport const updateText = new ValidatedMethod({\r\n  name: 'todos.updateText',\r\n  validate: new SimpleSchema({\r\n    todoId: Todos.simpleSchema().schema('_id'),\r\n    newText: Todos.simpleSchema().schema('text'),\r\n  }).validator({ clean: true, filter: false }),\r\n  run({ todoId, newText }) {\r\n    // This is complex auth stuff - perhaps denormalizing a userId onto todos\r\n    // would be correct here?\r\n    const todo = Todos.findOne(todoId);\r\n\r\n    if (!todo.editableBy(this.userId)) {\r\n      throw new Meteor.Error('todos.updateText.accessDenied',\r\n        'Cannot edit todos in a private list that is not yours');\r\n    }\r\n\r\n    Todos.update(todoId, {\r\n      $set: {\r\n        text: (_.isUndefined(newText) ? null : newText),\r\n      },\r\n    });\r\n  },\r\n});\r\n\r\nexport const remove = new ValidatedMethod({\r\n  name: 'todos.remove',\r\n  validate: new SimpleSchema({\r\n    todoId: Todos.simpleSchema().schema('_id'),\r\n  }).validator({ clean: true, filter: false }),\r\n  run({ todoId }) {\r\n    const todo = Todos.findOne(todoId);\r\n\r\n    if (!todo.editableBy(this.userId)) {\r\n      throw new Meteor.Error('todos.remove.accessDenied',\r\n        'Cannot remove todos in a private list that is not yours');\r\n    }\r\n\r\n    Todos.remove(todoId);\r\n  },\r\n});\r\n\r\n// Get list of all method names on Todos\r\nconst TODOS_METHODS = _.pluck([\r\n  insert,\r\n  setCheckedStatus,\r\n  updateText,\r\n  remove,\r\n], 'name');\r\n\r\nif (Meteor.isServer) {\r\n  // Only allow 5 todos operations per connection per second\r\n  DDPRateLimiter.addRule({\r\n    name(name) {\r\n      return _.contains(TODOS_METHODS, name);\r\n    },\r\n\r\n    // Rate limit per connection ID\r\n    connectionId() { return true; },\r\n  }, 5, 1000);\r\n}\r\n","import { Mongo } from 'meteor/mongo';\r\nimport { Factory } from 'meteor/factory';\r\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema';\r\nimport faker from 'faker';\r\nimport incompleteCountDenormalizer from './incompleteCountDenormalizer.js';\r\n\r\nimport { Lists } from '../lists/lists.js';\r\n\r\nclass TodosCollection extends Mongo.Collection {\r\n  insert(doc, callback) {\r\n    const ourDoc = doc;\r\n    ourDoc.createdAt = ourDoc.createdAt || new Date();\r\n    const result = super.insert(ourDoc, callback);\r\n    incompleteCountDenormalizer.afterInsertTodo(ourDoc);\r\n    return result;\r\n  }\r\n  update(selector, modifier) {\r\n    const result = super.update(selector, modifier);\r\n    incompleteCountDenormalizer.afterUpdateTodo(selector, modifier);\r\n    return result;\r\n  }\r\n  remove(selector) {\r\n    const todos = this.find(selector).fetch();\r\n    const result = super.remove(selector);\r\n    incompleteCountDenormalizer.afterRemoveTodos(todos);\r\n    return result;\r\n  }\r\n}\r\n\r\nexport const Todos = new TodosCollection('Todos');\r\nwTodos = Todos;\r\n\r\n// Deny all client-side updates since we will be using methods to manage this collection\r\nTodos.deny({\r\n  insert() { return true; },\r\n  update() { return true; },\r\n  remove() { return true; },\r\n});\r\n\r\nTodos.schema = new SimpleSchema({\r\n  _id: {\r\n    type: String,\r\n    regEx: SimpleSchema.RegEx.Id,\r\n  },\r\n  listId: {\r\n    type: String,\r\n    regEx: SimpleSchema.RegEx.Id,\r\n    denyUpdate: true,\r\n  },\r\n  text: {\r\n    type: String,\r\n    max: 100,\r\n    optional: true,\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    denyUpdate: true,\r\n  },\r\n  checked: {\r\n    type: Boolean,\r\n    defaultValue: false,\r\n  },\r\n});\r\n\r\nTodos.attachSchema(Todos.schema);\r\n\r\n// This represents the keys from Lists objects that should be published\r\n// to the client. If we add secret properties to List objects, don't list\r\n// them here to keep them private to the server.\r\nTodos.publicFields = {\r\n  listId: 1,\r\n  text: 1,\r\n  createdAt: 1,\r\n  checked: 1,\r\n};\r\n\r\n// TODO This factory has a name - do we have a code style for this?\r\n//   - usually I've used the singular, sometimes you have more than one though, like\r\n//   'todo', 'emptyTodo', 'checkedTodo'\r\nFactory.define('todo', Todos, {\r\n  listId: () => Factory.get('list'),\r\n  text: () => faker.lorem.sentence(),\r\n  createdAt: () => new Date(),\r\n});\r\n\r\nTodos.helpers({\r\n  list() {\r\n    return Lists.findOne(this.listId);\r\n  },\r\n  editableBy(userId) {\r\n    return this.list().editableBy(userId);\r\n  },\r\n});\r\n","import './useraccounts-configuration.js';\r\n","import { AccountsTemplates } from 'meteor/useraccounts:core';\r\n\r\n/**\r\n * The useraccounts package must be configured for both client and server to work properly.\r\n * See the Guide for reference (https://github.com/meteor-useraccounts/core/blob/master/Guide.md)\r\n */\r\n\r\nAccountsTemplates.configure({\r\n  showForgotPasswordLink: true,\r\n  defaultTemplate: 'Auth_page',\r\n  defaultLayout: 'App_body',\r\n  defaultContentRegion: 'main',\r\n  defaultLayoutRegions: {},\r\n});\r\n\r\nAccountsTemplates.configureRoute('signIn', {\r\n  name: 'signin',\r\n  path: '/signin',\r\n});\r\n\r\nAccountsTemplates.configureRoute('signUp', {\r\n  name: 'join',\r\n  path: '/join',\r\n});\r\n\r\nAccountsTemplates.configureRoute('forgotPwd');\r\n\r\nAccountsTemplates.configureRoute('resetPwd', {\r\n  name: 'resetPwd',\r\n  path: '/reset-password',\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { Lists } from '../../api/lists/lists.js';\r\nimport { Todos } from '../../api/todos/todos.js';\r\n\r\n// if the database is empty on server start, create some sample data.\r\nMeteor.startup(() => {\r\n  if (Lists.find().count() === 0) {\r\n    const data = [\r\n      {\r\n        name: 'Meteor Principles',\r\n        items: [\r\n          'Data on the Wire',\r\n          'One Language',\r\n          'Database Everywhere',\r\n          'Latency Compensation',\r\n          'Full Stack Reactivity',\r\n          'Embrace the Ecosystem',\r\n          'Simplicity Equals Productivity',\r\n        ],\r\n      },\r\n      {\r\n        name: 'Languages',\r\n        items: [\r\n          'Lisp',\r\n          'C',\r\n          'C++',\r\n          'Python',\r\n          'Ruby',\r\n          'JavaScript',\r\n          'Scala',\r\n          'Erlang',\r\n          '6502 Assembly',\r\n        ],\r\n      },\r\n      {\r\n        name: 'Favorite Scientists',\r\n        items: [\r\n          'Ada Lovelace',\r\n          'Grace Hopper',\r\n          'Marie Curie',\r\n          'Carl Friedrich Gauss',\r\n          'Nikola Tesla',\r\n          'Claude Shannon',\r\n        ],\r\n      },\r\n    ];\r\n\r\n    let timestamp = (new Date()).getTime();\r\n\r\n    data.forEach((list) => {\r\n      const listId = Lists.insert({\r\n        name: list.name,\r\n        incompleteCount: list.items.length,\r\n      });\r\n\r\n      list.items.forEach((text) => {\r\n        Todos.insert({\r\n          listId,\r\n          text,\r\n          createdAt: new Date(timestamp),\r\n        });\r\n\r\n        timestamp += 1; // ensure unique timestamp.\r\n      });\r\n    });\r\n  }\r\n});\r\n","// This defines a starting set of data to be loaded if the app is loaded with an empty db.\r\nimport './fixtures.js';\r\n\r\n// This file configures the Accounts package to define the UI of the reset password email.\r\nimport './reset-password-email.js';\r\n\r\n// Set up some rate limiting and other important security settings.\r\nimport './security.js';\r\n\r\n// This defines all the collections, publications and methods that the application provides\r\n// as an API to the client.\r\nimport './register-api.js';\r\n","import '../../api/lists/methods.js';\r\nimport '../../api/lists/server/publications.js';\r\nimport '../../api/todos/methods.js';\r\nimport '../../api/todos/server/publications.js';\r\n","import { Accounts } from 'meteor/accounts-base';\r\n\r\n\r\nAccounts.emailTemplates.siteName = 'Dora\\'s Dream';\r\nAccounts.emailTemplates.from = 'Meteor Todos Accounts <joc98@163.com>';\r\n\r\nAccounts.emailTemplates.resetPassword = {\r\n  subject() {\r\n    return 'Reset your password on Dora\\'s Dream';\r\n  },\r\n  html(user, url) {\r\n    return `Hello!\r\n\r\n\\<h1\\>Click the link below to reset your password on Meteor Todos.\\</h1\\>\r\n\r\n${url}\r\n\r\nIf you didn't request this email, please ignore it.\r\n\r\nThanks,\r\nThe Meteor Todos team\r\n`;\r\n  },\r\n//   html(user, url) {\r\n//     return `\r\n//       XXX Generating HTML emails that work across different email clients is a very complicated\r\n//       business that we're not going to solve in this particular example app.\r\n//\r\n//       A good starting point for making an HTML email could be this responsive email boilerplate:\r\n//       https://github.com/leemunroe/responsive-html-email-template\r\n//\r\n//       Note that not all email clients support CSS, so you might need to use a tool to inline\r\n//       all of your CSS into style attributes on the individual elements.\r\n// `\r\n//   }\r\n};\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\r\nimport { _ } from 'meteor/underscore';\r\n\r\n// Don't let people write arbitrary data to their 'profile' field from the client\r\nMeteor.users.deny({\r\n  update() {\r\n    return true;\r\n  },\r\n});\r\n\r\n// Get a list of all accounts methods by running `Meteor.server.method_handlers` in meteor shell\r\nconst AUTH_METHODS = [\r\n  'login',\r\n  'logout',\r\n  'logoutOtherClients',\r\n  'getNewToken',\r\n  'removeOtherTokens',\r\n  'configureLoginService',\r\n  'changePassword',\r\n  'forgotPassword',\r\n  'resetPassword',\r\n  'verifyEmail',\r\n  'createUser',\r\n  'ATRemoveService',\r\n  'ATCreateUserServer',\r\n  'ATResendVerificationEmail',\r\n];\r\n\r\n// Only allow 2 login attempts per connection per 5 seconds\r\nDDPRateLimiter.addRule({\r\n  name(name) {\r\n    return _.contains(AUTH_METHODS, name);\r\n  },\r\n\r\n  // Rate limit per connection ID\r\n  connectionId() { return true; },\r\n}, 2, 5000);\r\n\r\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n._enable({\"helper_name\":\"_\",\"supported_languages\":null,\"i18n_files_route\":\"/tap-i18n\",\"preloaded_langs\":[],\"cdn_path\":null});\nTAPi18n.languages_names[\"en\"] = [\"English\",\"English\"];\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"lists\":{\"makePrivate\":{\"notLoggedIn\":\"Must be logged in to make private lists.\",\"lastPublicList\":\"Cannot make the last public list private.\"},\"makePublic\":{\"notLoggedIn\":\"Must be logged in.\",\"accessDenied\":\"You don't have permission to edit this list.\"},\"updateName\":{\"accessDenied\":\"You don't have permission to edit this list.\"},\"remove\":{\"accessDenied\":\"'You don't have permission to remove this list.'\",\"lastPublicList\":\"Cannot delete the last public list.\",\"confirm\":\"Are you sure you want to delete the list\"},\"show\":{\"cancel\":\"Cancel\",\"showMenu\":\"Show Menu\",\"selectAction\":\"Select an action\",\"makePublic\":\"Make Public\",\"makePrivate\":\"Make Private\",\"delete\":\"Delete\",\"makeListPublic\":\"Make list public\",\"makeListPrivate\":\"Make list private\",\"deleteList\":\"Delete list\",\"typeToAdd\":\"Type to add new tasks\",\"noTasks\":\"No tasks here\",\"addAbove\":\"Add new tasks using the field above\",\"loading\":\"Loading tasks...\"},\"insert\":{\"list\":\"List\"}},\"todos\":{\"insert\":{\"accessDenied\":\"Cannot add todos to a private list that is not yours\"},\"setCheckedStatus\":{\"accessDenied\":\"Cannot edit todos in a private list that is not yours\"},\"updateText\":{\"accessDenied\":\"Cannot edit todos in a private list that is not yours\"},\"remove\":{\"accessDenied\":\"Cannot remove todos in a private list that is not yours\"},\"item\":{\"taskName\":\"Task name\"}},\"useraccounts\":{\"atTitle\":{\"subtitle\":\"Signing in allows you to have private lists\"}},\"layouts\":{\"appBody\":{\"logout\":\"Logout\",\"login\":\"Sign In\",\"join\":\"Join\",\"newList\":\"New List\",\"newListError\":\"Could not create list.\",\"tryingToConnect\":\"Trying to connect\",\"connectionIssue\":\"There seems to be a connection issue\"}},\"pages\":{\"appNotFound\":{\"pageNotFound\":\"Page not found\"}}};\nTAPi18n._loadLangFileObject(\"en\", translations);\nTAPi18n._registerServerTranslator(\"en\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"fr\"] = [\"French (France)\",\"FranÃ§ais\"];\nif(_.isUndefined(TAPi18n.translations[\"fr\"])) {\n  TAPi18n.translations[\"fr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fr\"][namespace])) {\n  TAPi18n.translations[\"fr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fr\"][namespace], {\"lists\":{\"makePrivate\":{\"notLoggedIn\":\"Doit Ãªtre connectÃ© pour rÃ©aliser des listes privÃ©es.\",\"lastPublicList\":\"Vous ne pouvez pas faire la derniÃ¨re liste publique privÃ©e.\"},\"makePublic\":{\"notLoggedIn\":\"Doit Ãªtre connectÃ©.\",\"accessDenied\":\"Vous n'Ãªtes pas autorisÃ© Ã  modifier cette liste.\"},\"updateName\":{\"accessDenied\":\"Vous n'Ãªtes pas autorisÃ© Ã  modifier cette liste.\"},\"remove\":{\"accessDenied\":\"'Vous n'Ãªtes pas autorisÃ© Ã  supprimer cette liste.'\",\"lastPublicList\":\"Vous ne pouvez pas supprimer la derniÃ¨re liste publique.\",\"confirm\":\"Etes-vous sÃ»r de vouloir supprimer la liste\"},\"show\":{\"cancel\":\"Annuler\",\"showMenu\":\"Afficher le menu\",\"selectAction\":\"SÃ©lectionnez une action\",\"makePublic\":\"Rendre publique\",\"makePrivate\":\"Rendre privÃ©\",\"delete\":\"Effacer\",\"makeListPublic\":\"Ouvrir la liste pour le public\",\"makeListPrivate\":\"Fermer la liste au public\",\"deleteList\":\"Effacer la liste\",\"typeToAdd\":\"Tapez pour ajouter de nouvelles tÃ¢ches\",\"noTasks\":\"Aucune tÃ¢che ici\",\"addAbove\":\"Ajouter de nouvelles tÃ¢ches ci-dessus\",\"loading\":\"Chargement sauvÃ© tÃ¢ches...\"},\"insert\":{\"list\":\"Liste\"}},\"todos\":{\"insert\":{\"accessDenied\":\"Vous ne pouvez pas ajouter todo Ã  une liste privÃ©e qui ne vous appartient pas\"},\"setCheckedStatus\":{\"accessDenied\":\"Vous ne pouvez pas modifier todos dans une liste privÃ©e qui ne vous appartient pas\"},\"updateText\":{\"accessDenied\":\"Vous ne pouvez pas modifier todos dans une liste privÃ©e qui ne vous appartient pas\"},\"remove\":{\"accessDenied\":\"Vous ne pouvez pas supprimer todos dans une liste privÃ©e qui ne vous appartient pas\"},\"item\":{\"taskName\":\"Nom de la tÃ¢che\"}},\"useraccounts\":{\"atTitle\":{\"subtitle\":\"Connexion Ã  vous permet d'avoir des listes privÃ©es\"}},\"layouts\":{\"appBody\":{\"logout\":\"Se dÃ©connecter\",\"login\":\"Se connecter\",\"join\":\"Joindre\",\"newList\":\"Nouvelle liste\",\"newListError\":\"La liste ne peut Ãªtre crÃ©Ã©.\",\"tryingToConnect\":\"Tentative de connexion\",\"connectionIssue\":\"Il semble y avoir un problÃ¨me de connexion\"}},\"pages\":{\"appNotFound\":{\"pageNotFound\":\"Page non trouvÃ©e\"}}});\nTAPi18n._registerServerTranslator(\"fr\", namespace);\n","import '/imports/startup/server';\r\nimport '/imports/startup/both';\r\nimport {Email} from 'meteor/email';\r\n\r\nAccounts.emailTemplates.siteName = \"dorasdream.com\";\r\nAccounts.emailTemplates.from = \"Dorasdream Admin <joc98@163.com>\";\r\nAccounts.emailTemplates.enrollAccount.subject = function (user) {\r\n    return \"Welcome to Awesome Town, \" + user.profile.name;\r\n};\r\nAccounts.emailTemplates.enrollAccount.text = function (user, url) {\r\n    return \"You have been selected to participate in building a better future!\"\r\n           + \" To activate your account, simply click the link below:\\n\\n\"\r\n           + url;\r\n};\r\nAccounts.emailTemplates.resetPassword.from = function () {\r\n    // Overrides value set in Accounts.emailTemplates.from when resetting passwords\r\n    return \"AwesomeSite Password Reset <joc98@163.com>\";\r\n};"]}